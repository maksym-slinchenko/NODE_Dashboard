{
  "openapi": "3.0.1",
  "info": {
    "version": "1.1.1",
    "title": "Questify API docs",
    "description": "API documentation for GoIT project 'Questify'. [Backend github repository](https://github.com/Powerman-code/finalTeamProject-tasks-server)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{"url":"http://localhost:8080/"},{"url":"https://goit-backend-23.herokuapp.com/"}],
  "tags": [
    {
      "name": "User",
      "description": "Authorization endpoints"
    },
    {
      "name": "Card",
      "description": "Card endpoints"
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["User"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "403": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": ["User"],
        "summary": "Logout",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "403": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/card": {
      "post": {
        "tags": ["Card"],
        "summary": "Create card",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Card's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      
      },
     
      "get": {
        "tags": ["Card"],
        "summary": "Get all user card",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (no token provided)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/card/:cardId/": {
      "patch": {
        "tags": ["Card"],
        "summary": "Edit card",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Card's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body or 'cardId')",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      },
      
      "delete": {
        "tags": ["Card"],
        "summary": "Delete card",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body or 'cardId')",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
      },
    "/api/card/:cardId/complete": {
      "patch": {
        "tags": ["Card"],
        "summary": "Confirm that card is completed",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompleteCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body or 'cardId')",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Session's access token (needed for all requests)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "id": {
                "type": "string",
                "description": "User's id",
                "example": "507f1f77bcf86cd799439011"
              }
                }
              }
          }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Session's access token (needed for all requests)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
              }
            }
          }
      },
      "CurrentResponse": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
      }
    }
    },
      "CardRequest": {
        "required": ["title", "difficulty", "type", "date"],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Card's title",
            "example": "Take out the trash"
          },
          "difficulty": {
            "type": "string",
            "description": "Card's difficulty",
            "enum": ["Easy", "Normal", "Hard"]
          },
          "category": {
            "type": "string",
            "description": "Card's category",
            "enum": ["Stuff", "Family", "Health", "Learning", "Leisure", "Work"]
          },
          "date": {
            "type": "string",
            "description": "Card's date (deadline, if card is challenge)",
            "example": "2020-12-31"
          },
          "time": {
            "type": "string",
            "description": "Card's time (deadline, if card is challenge)",
            "example": "20:30"
          },
          "type": {
            "type": "string",
            "description": "Card's type",
            "enum": ["Task", "Challenge"]
          }
        }
      },
      "CardResponse": {
        "type": "object",
        "properties": {
          "createdCard": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Card's title",
                "example": "Take out the trash"
              },
              "difficulty": {
                "type": "string",
                "description": "Card's difficulty",
                "enum": ["Easy", "Normal", "Hard"]
              },
              "category": {
                "type": "string",
                "description": "Card's category",
                "enum": [
                  "Stuff",
                  "Family",
                  "Health",
                  "Learning",
                  "Leisure",
                  "Work"
                ]
              },
              "date": {
                "type": "string",
                "description": "Card's date (deadline, if card is challenge)",
                "example": "2020-12-31"
              },
              "time": {
                "type": "string",
                "description": "Card's time (deadline, if card is challenge)",
                "example": "20:30"
              },
              "status": {
                "type": "string",
                "description": "Card's status",
                "enum": ["Incomplete", "Complete"]
              },
              "type": {
                "type": "string",
                "description": "Card's type",
                "enum": ["Task", "Challenge"]
              },
              "_id": {
                "type": "string",
                "description": "Card's id",
                "example": "507f1f77bcf86cd799439013"
              }
            }
          }
        }
      },
      "EditCardRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Card's title",
            "example": "Take out the trash"
          },
          "difficulty": {
            "type": "string",
            "description": "Card's difficulty",
            "enum": ["Easy", "Normal", "Hard"]
          },
          "category": {
            "type": "string",
            "description": "Card's category",
            "enum": ["Stuff", "Family", "Health", "Learning", "Leisure", "Work"]
          },
          "date": {
            "type": "string",
            "description": "Card's date (deadline, if card is challenge)",
            "example": "2020-12-31"
          },
          "time": {
            "type": "string",
            "description": "Card's time (deadline, if card is challenge)",
            "example": "20:30"
          },
          "type": {
            "type": "string",
            "description": "Card's type",
            "enum": ["Task", "Challenge"]
          }
        }
      },
      "EditCardResponse": {
        "type": "object",
        "properties": {
          "editedCard": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Card's title",
                "example": "Take out the trash"
              },
              "difficulty": {
                "type": "string",
                "description": "Card's difficulty",
                "enum": ["Easy", "Normal", "Hard"]
              },
              "category": {
                "type": "string",
                "description": "Card's category",
                "enum": [
                  "Stuff",
                  "Family",
                  "Health",
                  "Learning",
                  "Leisure",
                  "Work"
                ]
              },
              "date": {
                "type": "string",
                "description": "Card's date (deadline, if card is challenge)",
                "example": "2020-12-31"
              },
              "time": {
                "type": "string",
                "description": "Card's time (deadline, if card is challenge)",
                "example": "20:30"
              },
              "status": {
                "type": "string",
                "description": "Card's status",
                "enum": ["Incomplete", "Complete"]
              },
              "type": {
                "type": "string",
                "description": "Card's type",
                "enum": ["Task", "Challenge"]
              }
            }
          }
        }
      },
      "CompleteCardResponse": {
        "type": "object",
        "properties": {
          "editedCard": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Card's title",
                "example": "Take out the trash"
              },
              "difficulty": {
                "type": "string",
                "description": "Card's difficulty",
                "enum": ["Easy", "Normal", "Hard"]
              },
              "category": {
                "type": "string",
                "description": "Card's category",
                "enum": [
                  "Stuff",
                  "Family",
                  "Health",
                  "Learning",
                  "Leisure",
                  "Work"
                ]
              },
              "date": {
                "type": "string",
                "description": "Card's date (deadline, if card is challenge)",
                "example": "2020-12-31"
              },
              "time": {
                "type": "string",
                "description": "Card's time (deadline, if card is challenge)",
                "example": "20:30"
              },
              "status": {
                "type": "string",
                "description": "Card's status",
                "enum": ["Incomplete", "Complete"],
                "example": "Complete"
              },
              "type": {
                "type": "string",
                "description": "Card's type",
                "enum": ["Task", "Challenge"]
              },
              "_id": {
                "type": "string",
                "description": "Card's id",
                "example": "507f1f77bcf86cd799439013"
              }
            }
          }
        }
      },
      "GetCardResponse": {
        "type": "object",
        "properties": {
          "cards": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "User's card",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Card's title",
                  "example": "Take out the trash"
                },
                "difficulty": {
                  "type": "string",
                  "description": "Card's difficulty",
                  "enum": ["Easy", "Normal", "Hard"]
                },
                "date": {
                  "type": "string",
                  "description": "Card's date (deadline, if card is challenge)",
                  "example": "2020-12-31"
                },
                "time": {
                  "type": "string",
                  "description": "Card's time (deadline, if card is challenge)",
                  "example": "20:30"
                },
                "status": {
                  "type": "string",
                  "description": "Card's status",
                  "enum": ["Incomplete", "Complete"]
                },
                "type": {
                  "type": "string",
                  "description": "Card's type",
                  "enum": ["Task", "Challenge"]
                },
                "_id": {
                  "type": "string",
                  "description": "Card's id",
                  "example": "507f1f77bcf86cd799439013"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}